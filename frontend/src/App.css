:root {
  /* Color palette */
  --primary-blue: #245185;       /* Softer blue */
  --primary-blue-hover: #357abd; /* Darker shade for hover */
  --primary-text: white;
  
  /* Button styles */
  --button-padding: 6px 12px;
  --button-height: 32px;
  --button-radius: 4px;
  --button-font-size: 14px;
  
  /* Common transitions */
  --transition-speed: 0.2s;
  
  /* Shadows and borders */
  --shadow-small: 0 2px 10px rgba(0,0,0,0.1);
  --border-color: #ddd;
  
  /* Background colors */
  --bg-light: #f8f9fa;
  --bg-white: #ffffff;
  
  /* Text colors */
  --text-primary: #333;
  --text-secondary: #666;
  --text-muted: #999;
  
  /* Spacing */
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 12px;
  --spacing-lg: 20px;
  
  /* Panel dimensions */
  --panel-min-height: 70px;
  --panel-max-height: 80vh;
  --resize-handle-height: 6px;
  
  /* Input styles */
  --input-height: 38px;
  --input-border: 1px solid var(--border-color);
  --input-radius: 3px;
  --input-padding: 2px 4px;
  --input-font-size: 0.9em;
}

.blue-button:hover {
  background-color: var(--primary-blue-hover);
}

/* Apply the common style to all button variants */
.controls button,
.blue-button,
.database-button,
.device-button,
.toggle-list-button {
  padding: var(--button-padding);
  border-radius: var(--button-radius);
  background-color: var(--primary-blue);
  color: var(--primary-text);
  border: none;
  cursor: pointer;
  font-size: var(--button-font-size);
  transition: background-color var(--transition-speed);
  height: var(--button-height);
  white-space: nowrap;
}

.database-button:hover,
.device-button:hover,
.toggle-list-button:hover {
  background-color: var(--primary-blue-hover);
}

/* Main layout */
.main-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100%;
  overflow: hidden;
}

.map-container {
  flex: 1;
  position: relative;
}

/* PGN Panel */
.pgn-container {
  height: var(--panel-min-height);
  min-height: var(--panel-min-height);
  max-height: var(--panel-max-height);
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  border-top: var(--input-border);
  background: var(--bg-white);
  overflow: hidden;
  flex-shrink: 0;
}

.pgn-container.collapsed {
  overflow: hidden;
}

/* Resize Handle */
.pgn-resize-handle {
  width: 100%;
  height: var(--resize-handle-height);
  background: var(--bg-light);
  cursor: ns-resize;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  border-top: var(--input-border);
  border-bottom: var(--input-border);
}

.pgn-resize-handle:hover {
  background: #e0e0e0;
}

.pgn-resize-handle::before {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 30px;
  height: 2px;
  background: #999;
  border-radius: 1px;
}

/* Ensure panel content stays below resize handle */
.pgn-panel {
  margin-top: var(--resize-handle-height);
  height: calc(100% - var(--resize-handle-height));
  display: flex;
  flex-direction: column;
  overflow: hidden;
  flex: 1;
  background: var(--bg-light);
  padding: var(--spacing-xs);
  border-radius: var(--button-radius);
  box-shadow: var(--shadow-small);
  border: var(--input-border);
  overflow-y: auto;
  margin: 0;
}

.pgn-panel-header {
  flex-shrink: 0;
  padding: var(--spacing-xs);
  border-top: var(--input-border);
  border-bottom: var(--input-border);
  background: var(--bg-light);
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--spacing-md);
}

.pgn-header-left {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.pgn-header-center {
  display: flex;
  gap: 1rem;
  align-items: center;
  flex: 1;
  justify-content: center;
}

.pgn-header-right {
  display: flex;
  padding-right: 1rem;
  gap: 1rem;
  align-items: center;
  justify-content: flex-end;
  pointer-events: auto;  /* Ensure clicks are captured */
  position: relative;    /* Create stacking context */
  z-index: 1000;        /* Ensure it's above other elements */
}

.pgn-header-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
  width: 100%;
}

.pgn-panel-content {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;  /* Hide horizontal scroll at container level */
  padding: 12px;
  min-height: 0;
}

/* PGN Items */
.pgn-item-container {
  flex-shrink: 0;  /* Prevent items from shrinking */
  width: 100%;
  position: relative;
}

.pgn-item {
  background-color: #ffffff;  /* Default white background */
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 8px 12px;
  width: 100%;
  display: flex;
  height: 60px;  /* Fixed height */
}

.pgn-panel .pgn-number.simulated {
  background-color: #8cb77a;  /* Light green background for simulated PGNs */
}

.pgn-item-fixed {
  display: flex;
  flex: 0 0 auto;
  position: sticky;
  left: 0;
  background: #f8f9fa;
  padding-right: 12px;
  z-index: 1;
  border-right: 1px solid #ddd;
}

.pgn-item-scrollable {
  flex: 1;
  overflow-x: auto;
  margin-left: 12px;
  display: flex;
  align-items: center;  /* Center content vertically */
  height: 100%;        /* Take full height */
}

/* Custom scrollbar styling */
.pgn-item-scrollable::-webkit-scrollbar {
  height: 4px;  /* Even smaller scrollbar height */
}

.pgn-item-scrollable::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 2px;  /* Smaller radius to match height */
  margin: 0 4px;  /* Add some margin on the sides */
}

.pgn-item-scrollable::-webkit-scrollbar-thumb {
  background: #ddd;  /* Lighter color */
  border-radius: 2px;
}

.pgn-item-scrollable::-webkit-scrollbar-thumb:hover {
  background: #bbb;  /* Slightly darker on hover */
}

.pgn-values-container {
  display: flex;
  flex-direction: row;
  gap: 12px;
  min-width: min-content;
  height: fit-content;
  align-items: center;
}

.pgn-value {
  flex: 0 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2px;
  min-width: 80px;
}

.pgn-number {
  background: #0066cc;  /* Default blue background */
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 0.85em;
}

.pgn-description {
  flex: 0 0 150px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-weight: 500;
}

.pgn-rate {
  color: #666;
  font-size: 0.9em;
}

/* PGN Values */
.pgn-value-label {
  font-size: 0.75em;
  color: #666;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  white-space: nowrap;
  text-align: center;  /* Center the text */
}

.pgn-value-input-group {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  white-space: nowrap;
  position: relative;  /* For absolute positioning of units */
}

/* Default size for number inputs */
.pgn-value-input-group input {
    width: 75px;
    padding: 2px 4px;
    font-size: 0.9em;
    border: 1px solid #ddd;
    border-radius: 3px;
    text-align: right;
    padding-right: 24px;
}

/* Wider size for select/enumeration inputs */
.pgn-value-input-group select {
    width: 150px;
    padding: 2px 4px;
    font-size: 0.9em;
    border: 1px solid #ddd;
    border-radius: 3px;
    text-align: left;
    padding-right: 4px;
}

.pgn-value-unit {
  position: absolute;
  right: 4px;
  font-size: 0.8em;
  color: #666;
  pointer-events: none;  /* Prevent unit from interfering with input */
}

/* Ensure proper alignment */
.pgn-item {
  align-items: flex-end;
  padding: 4px;
}

/* React-Select Styles */
.pgn-select-container {
  width: 100%;
  position: relative;
  z-index: 100;  /* Higher z-index for the container */
}

.pgn-select__control {
  border: 1px solid #ddd !important;
  box-shadow: none !important;
  min-height: 38px !important;
  width: 100% !important;
}

.pgn-select__control--is-focused {
  border-color: #0066cc !important;
  box-shadow: 0 0 0 2px rgba(0,102,204,0.2) !important;
}

.pgn-select__menu {
  border: 1px solid #ddd !important;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1) !important;
  width: 100% !important;
  z-index: 101 !important;  /* Even higher z-index for the dropdown */
  position: absolute !important;
  background: white !important;
}

.pgn-select__option {
  padding: 8px 12px !important;
  display: block !important;
}

.pgn-select__option--is-focused {
  background-color: #f0f0f0 !important;
}

.pgn-select__option--is-selected {
  background-color: #0066cc !important;
}

.pgn-select__placeholder {
  color: #666 !important;
}

/* Remove PGN Button */
.remove-pgn {
  position: absolute;
  top: 4px;
  right: 4px;
  background: none;
  border: none;
  color: #666;
  font-size: 18px;
  cursor: pointer;
  padding: 4px;
  border-radius: 4px;
  line-height: 1;
  z-index: 1;
}

.remove-pgn:hover {
  color: #ff4444;
}

.pgn-database-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.pgn-database-content {
  background: white;
  width: 90%;
  max-width: 1200px;
  height: 90vh;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  padding: 20px;
}

.pgn-database-title {
  flex-shrink: 0;
}

.pgn-database-tabs {
  display: flex;
  gap: 0.5rem;
}

.pgn-database-header-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-left: auto;
}

.close-button {
  background: none;
  border: none;
  color: #666;
  cursor: pointer;
  font-size: 20px;
  padding: 4px 8px;
  line-height: 1;
}

.close-button:hover {
  color: #000;
}

.pgn-header-content {
  display: flex;
  align-items: right;
  gap: 8px;
  flex: 1;
}

.pgn-database-fields {
  padding: 10px;
}

.pgn-database-fields table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
}

.pgn-database-fields th,
.pgn-database-fields td {
  padding: 8px;
  text-align: left;
  border-bottom: 1px solid #ddd;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Define specific column widths */
.pgn-database-fields th:nth-child(1),
.pgn-database-fields td:nth-child(1) {
  width: 15%;  /* Field name column */
}

.pgn-database-fields th:nth-child(2),
.pgn-database-fields td:nth-child(2) {
  width: 40%;  /* Description column */
}

.pgn-database-fields th:nth-child(3),
.pgn-database-fields td:nth-child(3) {
  width: 20%;  /* Type column */
}

.pgn-database-fields th:nth-child(4),
.pgn-database-fields td:nth-child(4) {
  width: 10%;  /* Units column */
}

.pgn-database-fields th:nth-child(5),
.pgn-database-fields td:nth-child(5) {
  width: 15%;  /* Value column */
}

/* Add hover effect to show full content */
.pgn-database-fields td:hover {
  white-space: normal;
  word-wrap: break-word;
  background-color: #f8f9fa;
}

.pgn-database-fields th {
  background: #f8f9fa;
  font-weight: 500;
}

.pgn-selector {
  flex: 1;
  min-width: 10px;
}

.pgn-search-input {
  width: 250px;
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
  transition: border-color 0.2s, box-shadow 0.2s;
}

.pgn-search-input:focus {
  outline: none;
  border-color: #0066cc;
  box-shadow: 0 0 0 2px rgba(0, 102, 204, 0.2);
}

/* Enum Preview Styles */
.enum-preview {
  width: 100%;
  padding: 4px 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background-color: white;
  color: #333;
  cursor: pointer;
}

.enum-preview:hover {
  border-color: #0066cc;
}

.enum-preview option {
  padding: 4px 8px;
}

/* PGN Items in main panel */
.pgn-panel .pgn-item {
  background: #f8f9fa;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 4px 20px 4px 12px;
  width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 8px;
  align-items: center;
}

.pgn-panel .pgn-description {
  flex: 3;
  display: flex;
  flex-direction: row;
  align-items: center;
  margin-bottom: 0;
  font-weight: 500;
  gap: 8px;
}

/* Database specific styles */
.pgn-database-item .pgn-number {
  font-size: 0.9em;
  padding: 2px 6px;
  border-radius: 4px;
  background: #0066cc;
  color: white;
}

.pgn-panel .pgn-number {
  align-self: flex-start;
  background: #0066cc;
  color: white;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 0.9em;
}

.pgn-fixed-content {
  display: flex;
  gap: 12px;
  align-items: center;  /* Center all children vertically */
}

/* Wider minimum width for enum values */
.pgn-value:has(select) {
    min-width: 150px;
}

.controls {
  display: flex;
  gap: 10px;
  align-items: center;
  min-width: fit-content;
  padding: 8px;
  border-radius: 8px;
  position: relative;
  pointer-events: auto;  /* Ensure clicks are captured */
}

.controls button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
  opacity: 0.6;
}

/* Move navigation display styles from Map.css to App.css */
.navigation-display {
  display: flex;
  gap: 15px;
  align-items: center;
}

/* Add styles for the floating navigation container */
.floating-nav-container {
  position: absolute;
  bottom: 20px;  /* Changed from top to bottom */
  left: 20px;
  z-index: 1000;
  background: white;
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  border: 1px solid #ddd;
}

/* Keep existing navigation display styles */
.navigation-display {
  display: flex;
  gap: 15px;
  align-items: center;
}

.simulated-pgn-badge {
  display: inline-block;
  width: 20px;
  text-align: center;
  color: #666;
  font-weight: bold;
  font-size: 16px;
}
